#!/usr/bin/python

import ram.symbols
import ram.context


with ram.context(__name__):
    from net.ifcfg import QueryNetworkConfiguration
    from net.ifcfg import StoreNetworkConfiguration


if __name__ == '__main__':
    config = ram.symbols.recv()
    netcfg = QueryNetworkConfiguration()

    # ifconfig
    for ifname in config['ifconfig'].keys():
        if ifname in netcfg:
            continue
        if config['ifconfig'][ifname]['defconf']:
            continue
        netcfg.AddIface(ifname)

    for ifname in netcfg:
        if netcfg.IsLoopback(ifname):
            continue
        if not config['ifconfig'][ifname]['defconf']:
            continue
        netcfg.DelIface(ifname)

    for ifname in netcfg:
        if netcfg.IsLoopback(ifname):
            continue
        netcfg.SetIfaceEnabled(ifname, config['ifconfig'][ifname]['enabled'])
        netcfg.SetIfaceBootProto(ifname, config['ifconfig'][ifname]['usedhcp'])
        netcfg.SetIfaceIpAddress(ifname, config['ifconfig'][ifname]['ip_addr'])
        netcfg.SetIfaceIpNetmask(ifname, config['ifconfig'][ifname]['netmask'])
        netcfg.SetIfaceGwIgnored(ifname, config['ifconfig'][ifname]['ignored'])
        netcfg.SetIfaceIpGateway(ifname, config['ifconfig'][ifname]['gateway'])

    # routing
    default = config['routing']['default']
    netcfg.SetGatewayDevice(default)

    # resolver
    peerdns = config['resolver']['peerdns']
    netcfg.SetPeerDnsDevice(peerdns)

    if not peerdns:
        netcfg.SetIfacePrimaryDns(None, config['resolver']['pri_dns'])
        netcfg.SetIfaceSecondaryDns(None, config['resolver']['sec_dns'])
        netcfg.SetIfaceSearchList(None, config['resolver']['domains'])
    else:
        netcfg.SetIfacePrimaryDns(peerdns, "")
        netcfg.SetIfaceSecondaryDns(peerdns, "")
        netcfg.SetIfaceSearchList(peerdns, "")

    StoreNetworkConfiguration(netcfg)
